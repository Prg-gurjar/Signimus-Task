Task 6:

Calculator Class with Method Overloading

public class Calculator {
    // Method to add two numbers
    public int add(int num1, int num2) {
        return num1 + num2;
    }

    // Method to add three numbers
    public int add(int num1, int num2, int num3) {
        return num1 + num2 + num3;
    }

    // Method to concatenate strings
    public String add(String str1, String str2) {
        return str1 + str2;
    }

    public static void main(String[] args) {
        Calculator calculator = new Calculator();
        System.out.println(calculator.add(10, 20)); // Output: 30
        System.out.println(calculator.add(10, 20, 30)); // Output: 60
        System.out.println(calculator.add("Hello", "World")); // Output: HelloWorld
    }
}


Method Overriding Example

// Parent Animal class
class Animal {
    public void sound() {
        System.out.println("The animal makes a sound.");
    }
}

// Dog subclass that overrides the sound() method
class Dog extends Animal {
    @Override
    public void sound() {
        System.out.println("The dog barks.");
    }
}

public class Main {
    public static void main(String[] args) {
        Animal animal = new Animal();
        animal.sound(); // Output: The animal makes a sound.

        Dog dog = new Dog();
        dog.sound(); // Output: The dog barks.
    }
}


LeetCode 1768: Merge Strings Alternately

public class Solution {
    public String mergeAlternately(String word1, String word2) {
        StringBuilder result = new StringBuilder();
        int maxLength = Math.max(word1.length(), word2.length());

        for (int i = 0; i < maxLength; i++) {
            if (i < word1.length()) {
                result.append(word1.charAt(i));
            }
            if (i < word2.length()) {
                result.append(word2.charAt(i));
            }
        }

        return result.toString();
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        System.out.println(solution.mergeAlternately("abc", "pqr")); // Output: "apbqcr"
    }
}
