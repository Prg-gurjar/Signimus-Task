 Task 13:

Writing Random Numbers to a Text File and Calculating Their Sum

import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Random;
import java.util.Scanner;

public class SumOfRandomNumbers {
    public static void main(String[] args) {
        // Specify the file name and the number of random numbers
        String fileName = "random_numbers.txt";
        int numNumbers = 10;

        // Write random numbers to the file
        try (PrintWriter writer = new PrintWriter(new FileWriter(fileName))) {
            Random random = new Random();
            for (int i = 0; i < numNumbers; i++) {
                writer.println(random.nextInt(100));
            }
        } catch (IOException e) {
            System.err.println("Error writing to file: " + e.getMessage());
        }

        // Read the file and calculate the sum of the numbers
        try (Scanner scanner = new Scanner(new java.io.File(fileName))) {
            int sum = 0;
            while (scanner.hasNextInt()) {
                sum += scanner.nextInt();
            }
            System.out.println("Sum of numbers in the file: " + sum);
        } catch (IOException e) {
            System.err.println("Error reading from file: " + e.getMessage());
        }
    }
}


Reading a File Line-by-Line and Counting the Number of Lines

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

public class LineCounter {
    public static void main(String[] args) {
        String fileName = "example.txt";

        try (BufferedReader reader = new BufferedReader(new FileReader(fileName))) {
            int lineNumber = 0;
            while (reader.readLine() != null) {
                lineNumber++;
            }
            System.out.println("Number of lines in the file: " + lineNumber);
        } catch (IOException e) {
            System.err.println("Error reading from file: " + e.getMessage());
        }
    }
}


Copying Content from a Binary File

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;

public class BinaryFileCopier {
    public static void main(String[] args) {
        String sourceFileName = "source_image.jpg";
        String targetFileName = "target_image.jpg";

        try (FileInputStream source = new FileInputStream(sourceFileName);
             FileOutputStream target = new FileOutputStream(targetFileName)) {
            byte[] buffer = new byte[1024];
            int bytesRead;
            while ((bytesRead = source.read(buffer)) != -1) {
                target.write(buffer, 0, bytesRead);
            }
            System.out.println("File copied successfully.");
        } catch (IOException e) {
            System.err.println("Error copying file: " + e.getMessage());
        }
    }
}
