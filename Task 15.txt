 Task 15:

ArrayList and LinkedList Operations

import java.util.ArrayList;
import java.util.LinkedList;

public class ListOperations {
    public static void main(String[] args) {
        // ArrayList operations
        ArrayList<String> arrayList = new ArrayList<>();
        arrayList.add("Apple");
        arrayList.add("Banana");
        arrayList.add("Cherry");
        System.out.println("ArrayList: " + arrayList);
        System.out.println("Retrieved element: " + arrayList.get(1));

        // LinkedList operations
        LinkedList<String> linkedList = new LinkedList<>();
        linkedList.add("Dog");
        linkedList.add("Cat");
        linkedList.add("Bird");
        System.out.println("LinkedList: " + linkedList);
        System.out.println("Retrieved element: " + linkedList.get(1));
    }
}


TreeSet Operations

import java.util.TreeSet;

public class TreeSetOperations {
    public static void main(String[] args) {
        TreeSet<String> treeSet = new TreeSet<>();
        treeSet.add("Banana");
        treeSet.add("Apple");
        treeSet.add("Cherry");
        System.out.println("TreeSet: " + treeSet);

        // Sorting
        System.out.println("Sorted TreeSet: " + treeSet);
    }
}


HashMap Operations

import java.util.HashMap;

public class HashMapOperations {
    public static void main(String[] args) {
        HashMap<Integer, String> hashMap = new HashMap<>();
        hashMap.put(1, "John Doe");
        hashMap.put(2, "Jane Smith");
        System.out.println("HashMap: " + hashMap);
        System.out.println("Retrieved value: " + hashMap.get(1));
    }
}


Word Frequency Counter

import java.util.HashMap;

public class WordFrequencyCounter {
    public static void main(String[] args) {
        String sentence = "This is a test sentence. This sentence is just a test.";
        String[] words = sentence.split("\\s+");

        HashMap<String, Integer> wordFrequency = new HashMap<>();
        for (String word : words) {
            word = word.toLowerCase();
            if (wordFrequency.containsKey(word)) {
                wordFrequency.put(word, wordFrequency.get(word) + 1);
            } else {
                wordFrequency.put(word, 1);
            }
        }

        System.out.println("Word Frequency:");
        for (String word : wordFrequency.keySet()) {
            System.out.println(word + ": " + wordFrequency.get(word));
        }
    }
}


Duplicate Element Finder

import java.util.ArrayList;

public class DuplicateElementFinder {
    public static void main(String[] args) {
        ArrayList<Integer> arrayList = new ArrayList<>();
        arrayList.add(1);
        arrayList.add(2);
        arrayList.add(3);
        arrayList.add(2);
        arrayList.add(4);
        arrayList.add(5);
        arrayList.add(3);

        System.out.println("ArrayList: " + arrayList);
        System.out.println("Duplicate elements: " + findDuplicates(arrayList));
    }

    public static ArrayList<Integer> findDuplicates(ArrayList<Integer> arrayList) {
        ArrayList<Integer> duplicates = new ArrayList<>();
        for (int i = 0; i < arrayList.size(); i++) {
            for (int j = i + 1; j < arrayList.size(); j++) {
                if (arrayList.get(i) == arrayList.get(j) && !duplicates.contains(arrayList.get(i))) {
                    duplicates.add(arrayList.get(i));
                }
            }
        }
        return duplicates;
    }
}


Removing Duplicates using HashSet

import java.util.ArrayList;
import java.util.HashSet;

public class RemoveDuplicates {
    public static void main(String[] args) {
        ArrayList<Integer> arrayList = new ArrayList<>();
        arrayList.add(1);
        arrayList.add(2);
        arrayList.add(3);
        arrayList.add(2);
        arrayList.add(4);
        arrayList.add(5);
        arrayList.add(3);

        System.out.println("ArrayList: " + arrayList);
        System.out.println("ArrayList without duplicates: " + removeDuplicates(arrayList));
    }

    public static ArrayList<Integer> removeDuplicates(ArrayList<Integer> arrayList) {
        HashSet<Integer> hashSet = new HashSet<>(arrayList);
        return new ArrayList<>(hashSet);
    }
}
