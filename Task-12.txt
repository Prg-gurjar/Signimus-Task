Task-12

Handling Division by Zero using Try-Catch

public class DivisionByZero {
    public static void main(String[] args) {
        try {
            int numerator = 10;
            int denominator = 0;
            int result = numerator / denominator;
            System.out.println("Result: " + result);
        } catch (ArithmeticException e) {
            System.out.println("Error: Division by zero is not allowed.");
        }
    }
}


Opening and Closing Resources in the Finally Block

import java.io.File;
import java.io.FileReader;
import java.io.IOException;

public class ResourceHandling {
    public static void main(String[] args) {
        FileReader reader = null;
        try {
            File file = new File("example.txt");
            reader = new FileReader(file);
            // Read from the file
        } catch (IOException e) {
            System.out.println("Error reading from the file: " + e.getMessage());
        } finally {
            if (reader != null) {
                try {
                    reader.close();
                } catch (IOException e) {
                    System.out.println("Error closing the reader: " + e.getMessage());
                }
            }
        }
    }
}


Custom Exception for Invalid Age Input

public class AgeValidator {
    public static void validateAge(int age) throws InvalidAgeException {
        if (age < 0) {
            throw new InvalidAgeException("Age cannot be negative.");
        }
    }

    public static class InvalidAgeException extends Exception {
        public InvalidAgeException(String message) {
            super(message);
        }
    }

    public static void main(String[] args) {
        try {
            AgeValidator.validateAge(-1);
        } catch (InvalidAgeException e) {
            System.out.println("Error: " + e.getMessage());
        }
    }
}


Demonstrating the Use of Throws in a Method that Reads a File

import java.io.File;
import java.io.FileReader;
import java.io.IOException;

public class FileReading {
    public static void readFile(String filename) throws IOException {
        File file = new File(filename);
        FileReader reader = new FileReader(file);
        // Read from the file
        reader.close();
    }

    public static void main(String[] args) {
        try {
            FileReading.readFile("example.txt");
        } catch (IOException e) {
            System.out.println("Error reading from the file: " + e.getMessage());
        }
    }
}
